1.58.2 - 2018-12-09
-------------------

* meson: Fix random build errors (mostly MSVC)
  :mr:`88` (:user:`Tomasz Miąsko <tmiasko>`)
* scanner: Fix parsing of __typeof__ that is part of a cast expression
  :mr:`78` (:user:`Tomasz Miąsko <tmiasko>`)
* scanner: Ignore __pragma keyword used by MSVC
  :mr:`87` (:user:`Tomasz Miąsko <tmiasko>`)


1.58.1 - 2018-11-17
-------------------

* meson: Install warnlib :mr:`62` (:user:`Jan Tojnar <jtojnar>`)
* scanner: Parse __typeof__ and discard it
  :mr:`71` (:user:`Jan Alexander Steffens <heftig>`)
* meson: add back /usr/bin/env to the python-cmd
  :issue:`237` :mr:`70` (:user:`Håvard Graff <hgr>`)
* Fix non libtool build
  :mr:`72` (:user:`Olivier Crête <ocrete>`)


1.58.0 - 2018-08-31
-------------------

::

    • Changes:
      - Update annotations imported from GLib, and require GLib 2.58
      - Ensure that G-I builds on macOS
      - Add a --version argument to the Python-based tools
      - Allow selecting the output format for g-ir-doc-tool
      - Drop the Visual Studio templates
      - Use Sphinx to generate the user documentation; gtk-doc is still
        required for the girepository-1.0 C API reference
      - Support all _Float* C types from ISO/IEC TS 18661-3:2015
      - The autotools build now uses autoconf-archive
      - g-ir-doc-tool: Add DevDocs formatting for GJS (--format=devdocs)
        This adds a dependency on the Python markdown package

    • Issues resolved on gitlab.gnome.org:
      - #139 - make check fails for gobject-introspection 1.44.0 on
               OS X 10.10.4
      - #184 - Default element-type not set for GByteArray object
               properties
      - #189 - c:type missing pointer/array information in GIR for
               C array parameters
      - #134 - Allow multiple output formats
      - #218 - gtk2 hits unreachable code after enable -Wswitch-default
      - #113 - Memory leaks in GI regress and marshalling tests property
               setters

    • Bugs resolved on bugzilla.gnome.org:
      - #702788 - The girepository DLL is acquiring pointers incorrectly
                  on Windows/x64

    • Contributors:
      Tomasz Miąsko, Emmanuele Bassi, Rico Tzschichholz, Chun-wei Fan,
      Philip Chimento, Tom Schoonjans, Christoph Reiter, Ray Donnelly,
      Marcus Calhoun-Lopez, Florian Müllner, Evan Welsh, Mathieu Duponchelle

1.56 - 2018-03-13
-----------------

::

    • Changes:
      - Add _Float128 to the base C types
      - Update annotations imported from GLib, and require GLib 2.56

    • Issues resolved on gitlab.gnome.org:
      - #173 - Fails to parse flag-constants
      - #175 - writer: Include documentation and symbol position in
               source files
      - #120 - adding subdir-objects to AM_INIT_AUTOMAKE
      - #190 - const qualifier dropped from c:type on (type filename)
               parameters
      - #188 - giscanner: don't print "suppressed N warnings" if --quiet
               was specified

    • Bugs resolved on bugzilla.gnome.org:
      - #764791 - gitypelib.c: increase #define MAX_NAME_LEN from 200 to 255
      - #756921 - g-ir-scanner does not recognize _Thread_local
      - #791991 - Broken shared-library value in gir files on *BSD when
                  builddir includes the name of the library
      - #791902 - Building using non-libtool (e.g., meson) on MinGW
      - #629667 - MY_ENUM_VALUE = <constant> only works for last member
      - #699354 - g-ir-compiler man page for --shared-library incorrectly
                  says "lib" and ".so" should be removed
      - #761985 - os.name can be wrong in some context
      - #699328 - GI_TYPELIB_PATH is undocumented

    • Contributors:
      Ting-Wei Lan, Leslie Giles, Rico Tzschichholz, Christoph Reiter,
      Nicola Fontana, Tomasz Miąsko, Emmanuele Bassi, Philip Chimento,
      Karl-Philipp Richter

.. note::

    For older releases, see the Git log
